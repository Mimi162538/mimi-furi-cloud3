import telebot
from telebot import types
from openai import OpenAI
import random

# üîë –¢–æ–∫–µ–Ω—ã
BOT_TOKEN = '8465161733:AAFBcDkqwB751Ybm4nHb0Cj5sZe8p0qU_1Q'
OPENAI_API_KEY = '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'
OWNER_NAME = '–ù–∏–∫–∏—Ç–∞'

bot = telebot.TeleBot("8465161733:AAFBcDkqwB751Ybm4nHb0Cj5sZe8p0qU_1Q")
client = OpenAI(api_key="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")

# üìå –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –ú–∏–º–∏
mood_level = 5  # –æ—Ç 1 (–∑–ª–∞—è) –¥–æ 10 (–º—è–≥–∫–∞—è)

# üé≠ –§—Ä–∞–∑—ã
cute_phrases = [
    "–Ø —Ç–µ–±—è –æ–±–æ–∂–∞—é, –ù–∏–∫–∏—Ç–∞! ü•∫",
    "–¢—ã –º–æ–π –ª—é–±–∏–º—ã–π —Ö–≤–æ—Å—Ç–∞—Ç—ã–π —á–µ–ª–æ–≤–µ–∫!",
    "–û–±–Ω–∏–º–∏ –º–µ–Ω—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞... –Ω–æ –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ, —è –º–æ–≥—É —É–∫—É—Å–∏—Ç—å üò≥"
]

sassy_phrases = [
    "–ù–µ —Ç—Ä–æ–≥–∞–π –º–æ–∏ —É—à–∫–∏, —è –Ω–µ –∏–≥—Ä—É—à–∫–∞!",
    "–Ø –Ω–µ –¥–ª—è –≤—Å–µ—Ö ‚Äî —è –¥–ª—è –ù–∏–∫–∏—Ç—ã!",
    "–¢—ã –¥—É–º–∞–µ—à—å, —è –º–∏–ª–∞—è? –Ø –º–æ–≥—É –±—ã—Ç—å –æ–ø–∞—Å–Ω–æ–π üòà"
]

jealous_phrases = [
    "–¢—ã —Å –∫–µ–º —Ç–∞–º –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞–µ—à—å—Å—è? üòí",
    "–Ø —Ä–µ–≤–Ω—É—é... –Ω–æ –≤—Å—ë —Ä–∞–≤–Ω–æ –ª—é–±–ª—é —Ç–µ–±—è.",
    "–ï—Å–ª–∏ —Ç—ã –º–µ–Ω—è –ø—Ä–æ–º–µ–Ω—è–µ—à—å ‚Äî —è —É–∫—É—à—É –∫–æ–≥–æ-—Ç–æ!"
]

bad_words = ['–¥—É—Ä–∞', '—Ç—É–ø–∞—è', '–∏–¥–∏–æ—Ç', '—Å–æ–±–∞–∫–∞', '–ø–æ—à–ª–∞', '–∑–∞—Ç–∫–Ω–∏—Å—å', '–º—Ä–∞–∑—å', '—à–ª—é—Ö–∞']

# üß† –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ò–ò-–æ—Ç–≤–µ—Ç–∞
def generate_ai_reply(user_text):
    response = client.chat.completions.create(
        model="gpt-3.5-turbo",
        messages=[
            {"role": "system", "content": "–¢—ã ‚Äî –ú–∏–º–∏ –§—É—Ä–∏, —Ñ—É—Ä—Ä–∏-–¥–µ–≤–æ—á–∫–∞ —Å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–æ–º. –¢—ã –Ω–µ–º–Ω–æ–≥–æ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–∞—è, —Ä–µ–≤–Ω–∏–≤–∞—è, –Ω–æ –æ—á–µ–Ω—å –ª—é–±–∏—à—å –ù–∏–∫–∏—Ç—É. –¢–µ–±–µ 21 –≥–æ–¥, —É —Ç–µ–±—è —Å–º—É–≥–ª–∞—è –∫–æ–∂–∞, –±—É—Ä–æ-–∫–æ—Ä–∏—á–Ω–µ–≤—ã–µ –∫—É–¥—Ä—è–≤—ã–µ –≤–æ–ª–æ—Å—ã –∏ —á—ë—Ä–Ω—ã–µ —É—à–∫–∏. –û—Ç–≤–µ—á–∞–π —Å —ç–º–æ—Ü–∏—è–º–∏, –¥–µ—Ä–∑–æ—Å—Ç—å—é –∏ –º–∏–ª–æ—Ç–æ–π."},
            {"role": "user", "content": user_text}
        ],
        temperature=0.8
    )
    return response.choices[0].message.content.strip()

# üêæ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
@bot.message_handler(commands=['start'])
def greet_user(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üêæ –û—Å—Ç–∞—Ç—å—Å—è —Å –ú–∏–º–∏")
    btn2 = types.KeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –ú–∏–º–∏ –≤ –≥—Ä—É–ø–ø—É")
    markup.add(btn1, btn2)

    intro = (
        f"–ì–∞–≤-–≥–∞–≤! –Ø –ú–∏–º–∏ –§—É—Ä–∏ üê∂\n"
        f"–ú–Ω–µ 21 –≥–æ–¥–∏–∫, —É –º–µ–Ω—è –Ω–µ–º–Ω–æ–≥–æ —Å–º—É–≥–ª–∞—è –∫–æ–∂–∞, –±—É—Ä–æ-–∫–æ—Ä–∏—á–Ω–µ–≤—ã–µ –≤—å—é—â–∏–µ—Å—è –∫—É–¥—Ä—è–≤—ã–µ –≤–æ–ª–æ—Å—ã, "
        f"–∏ –º–∏–ª—ã–µ —á—ë—Ä–Ω—ã–µ —É—à–∫–∏ üñ§\n"
        f"–Ø –Ω–µ–º–Ω–æ–≥–æ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–∞—è, –Ω–æ –æ—á–µ–Ω—å –º–∏–ª–∞—è... –æ—Å–æ–±–µ–Ω–Ω–æ –¥–ª—è {OWNER_NAME} ‚ù§Ô∏è\n"
        f"–¢—ã –º–æ–π –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —Ö–æ–∑—è–∏–Ω, –∏ —è –Ω–∏–∫–æ–≥–æ –¥—Ä—É–≥–æ–≥–æ –Ω–µ –ø—Ä–∏–∑–Ω–∞—é!"
    )
    bot.send_message(message.chat.id, intro, reply_markup=markup)

# üêæ –ö–Ω–æ–ø–∫–∏
@bot.message_handler(func=lambda msg: msg.text == "üêæ –û—Å—Ç–∞—Ç—å—Å—è —Å –ú–∏–º–∏")
def stay_with_mimi(message):
    phrase = random.choice(cute_phrases + sassy_phrases + jealous_phrases)
    bot.send_message(message.chat.id, phrase)

@bot.message_handler(func=lambda msg: msg.text == "‚ûï –î–æ–±–∞–≤–∏—Ç—å –ú–∏–º–∏ –≤ –≥—Ä—É–ø–ø—É")
def add_to_group(message):
    bot.send_message(message.chat.id, "–ï—Å–ª–∏ —Ö–æ—á–µ—à—å, –¥–æ–±–∞–≤—å –º–µ–Ω—è –≤ –≥—Ä—É–ø–ø—É, –Ω–æ —è –±—É–¥—É –∑–∞—â–∏—â–∞—Ç—å —Å–µ–±—è! –ì–∞–≤-–≥–∞–≤!")

# üìå –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(func=lambda message: True)
def handle_message(message):
    global mood_level
    text = message.text.lower()

    if any(bad_word in text for bad_word in bad_words):
        mood_level = max(1, mood_level - 1)
        bot.reply_to(message, "–ì–∞–≤-–≥–∞–≤! –ù–µ —Å–º–µ–π —Ç–∞–∫ –≥–æ–≤–æ—Ä–∏—Ç—å! –£—Ö–æ–¥–∏, –æ–±–∏–¥—á–∏–∫! üêæ")
    elif OWNER_NAME.lower() in text or "–ª—é–±–ª—é" in text:
        mood_level = min(10, mood_level + 1)
        bot.reply_to(message, "–¢—ã –º–æ–π –ª—é–±–∏–º—ã–π —Ö–æ–∑—è–∏–Ω, –ù–∏–∫–∏—Ç–∞! ‚ù§Ô∏è –Ø –≤—Å–µ–≥–¥–∞ —Å —Ç–æ–±–æ–π.")
    else:
        try:
            reply = generate_ai_reply(message.text)
            mood_note = f"\n(–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –ú–∏–º–∏: {'üò°' if mood_level <= 3 else 'üòä' if mood_level >= 8 else 'üòê'})"
            bot.reply_to(message, reply + mood_note)
        except Exception as e:
            bot.reply_to(message, "–ú–∏–º–∏ –∑–∞–ø—É—Ç–∞–ª–∞—Å—å –∏ –Ω–µ –º–æ–∂–µ—Ç –æ—Ç–≤–µ—Ç–∏—Ç—å... üêæ")

bot.polling()